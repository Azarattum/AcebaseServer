/data/{dbname}/{path}:
  get:
    tags:
      - data
    summary: Get the value of a path
    description: Gets the stored value of a path in the database
    parameters:
      - name: dbname
        in: path
        description: name of the database
        required: true
        schema:
          type: string
          example: mydb
      - name: path
        in: path
        description: database path
        required: true
        schema:
          type: string
          example: collection/child/property
    responses:
      200:
        description: returns the serialized value of the target path, and whether it exists in the database
        content:
          'application/json':
            schema:
              type: object
              properties:
                exists:
                  type: boolean
                  example: true
                val:
                  oneOf:
                    - type: string
                    - type: number
                    - type: integer
                    - type: boolean
                    - type: object
                    - type: array
                  description: Any value (serialized for transport)
                  example: { name: 'Ewout', stats: { points: 238421, lastSeen: '2022-04-07T10:44:53Z' } }
                map:
                  oneOf:
                    - type: string
                      example: 'date'
                    - type: object
                      example: { 'stats/lastSeen': 'date' }
                  description: If the value has been serialized for transport, contains a string defining `val`s data type (eg `"date"` or `"binary"`), or an object with deep property mappings for an object value in `val`
              example:
                val: '2022-04-07T16:36:21Z'
                map: 'date'
      403:
        description: Returns a "403 Forbidden" if the signed in user is not allowed to read from the target path
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Error'
      500:
        description: An unexpected error occurred
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UnexpectedError'
